{
  "hash": "b9b4e110862c36d2364a447a46896076",
  "result": {
    "markdown": "---\ntitle: \"Week 6: Spatial data analysis: Introduction to kriging\"\nformat:\n  revealjs:\n    slide-number: true\n    show-slide-number: all \n---\n\n\n## Interpolation\n\nHow to estimate unknown values at specific\nlocations?\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Week6_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n## Spatial Interpolation Methods\n\n- Inverse Distance Weighting (IDW)\n\n- Trend surface analysis\n\n- Kriging\n\n- Nearest neighbours: Thiessen polygons (Voronoi diagram)\n\n- Triangulated Irregular Network (TIN)\n\n\n## Example\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n|  x|  y|  z|      d55|\n|--:|--:|--:|--------:|\n|  2|  2| 10| 4.242641|\n|  3|  7| 11| 2.828427|\n|  9|  9| 15| 5.656854|\n|  6|  5|  9| 1.000000|\n|  5|  3|  8| 2.000000|\n:::\n:::\n\n\n:::\n\n::: {.column width=\"60%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Week6_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n:::\n\n::::\n\nWe want to find z value at x=5, y=5.\n\n## Inverse Distance Weighting (IDW)\n\n$$Z_p = \\frac{\\sum_{i=1}^{n}Z_i W_i}{\\sum_{i=1}^{n}W_i}$$\n\nWhere,\n\n$Z_p$ = interpolated value at the grid node\n\n$Z_i$ = $z_i$ value at location $(x_i, y_i)$\n\n$W_i$ = weighting function\n\n$n$ = number of sample points\n\nUsually, $\\sum_{i=1}^n w_i = 1$\n\n## IDW - weights\n\nWeights - based on distance from each of the known points ($i$) to the point we want to estimate ($k$)\n\nPoint $i$ to point $k$ weight is\n\n$$w_i = \\frac{\\frac{1}{d_{ik}}}{\\sum_{i=1}^n\\frac{1}{d_{ik}}}$$\n\n## Example (cont.)\n\n\n::: {.cell}\n::: {.cell-output-display}\n|  x|  y|  z|      d55|   inv_dis|    weight|\n|--:|--:|--:|--------:|---------:|---------:|\n|  2|  2| 10| 4.242641| 0.2357023| 0.1040154|\n|  3|  7| 11| 2.828427| 0.3535534| 0.1560231|\n|  9|  9| 15| 5.656854| 0.1767767| 0.0780115|\n|  6|  5|  9| 1.000000| 1.0000000| 0.4413000|\n|  5|  3|  8| 2.000000| 0.5000000| 0.2206500|\n:::\n:::\n\n\nPredicted value at (5, 5)\n\n$$z(5, 5) = 10\\times 0.104 + 11 \\times 0.156 + 15 \\times 0.078 + 9 \\times 0.441 + 8 \\times 0.220$$\n\n## Trend Surface Analysis\n\n$Z = \\beta_o + \\beta_1 X + \\beta_2 Y + \\epsilon$\n\n$Z$ is the observational data, and $X$ and $Y$ are the geographic coordinates of locations where the observations are made.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Week6_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n## Trend Surface Analysis (cont.)\n\n$Z = \\beta_o + \\beta_1 X + \\beta_2 Y + \\epsilon$\n\n$Z$ is the observational data, and $X$ and $Y$ are the geographic coordinates of locations where the observations are made.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Week6_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n## Kriging\n\n**Step 1:**\n\nThe spatial covariance structure of the sampled points is determined by fitting a variogram.\n\n**Step 2:**\n\nWeights are derived from this covariance structure are used to interpolate values for unsampled points or blocks across the spatial field.\n\n##\n\n\"Kriging will in general not be more effective than simpler methods of interpolation if there is little spatial autocorrelation among the sampled data points (that is, if the values do not co-vary in space). If there is at least moderate spatial autocorrelation, however, kriging can be a helpful method to preserve spatial variability that would be lost using a simpler method (for an example, see Auchincloss 2007, below).\"\n\nSource: https://www.publichealth.columbia.edu/research/population-health-methods/kriging-interpolation#:~:text=Kriging%20can%20be%20understood%20as,blocks%20across%20the%20spatial%20field.\n\n## Variogram\n\nShows how the dependence changes with distance.\n\nThe dependence across space of a randomfield $Z$ is assessed using a variogram $\\gamma$:\n\n$$\\gamma(h)=\\frac{1}{2}E[z(s)-z(s+h)]^2$$\n\n## Empirical estimator of variogram (Matheron estimator)\n\n$$\\hat{\\gamma}(h) = \\frac{1}{2|N_h|}\\sum_{(i, j)\\epsilon N_h}(z(s_i)-z(s_j))^2$$\nwhile $N_h$  stands for the number of pair observations $(i,j)$ separated by a spatial distance $h$. \n\nThe terms $z(s_i)$ and $z(s_j)$ are the attribute values of observations $i$ and $j$ respectively.\n\n## There are other estimators\n\nCressie-Hawkins:  which is more robust to extreme values. \n\nOther robust estimators: \n\n- Dowd \n\n- Genton\n\n## Variogram: illustration\n\nStep 1:\n\nWe compute sample values $z$ at a pair of points with:\n\n$$\\frac{[z(x+h) - z(x)]^2}{2}$$\n\n## \n\n![](dist_diff_plot.webp)\n\ndistance (lag):  Euclidean distance\n\nSource: https://scikit-gstat.readthedocs.io/en/latest/userguide/variogram.html\n\n##\n\n![](var1.png)\n\nSource: https://scikit-gstat.readthedocs.io/en/latest/userguide/variogram.html\n\n## scikit-gstat: Different methods for binning distance data\n\n- even - evenly spaced bins\n\n- uniform - same sample sized bins\n\n- sturges - derive number of bins by Sturge’s rule\n\n- scott - derive number of bins by Scotts’s rule\n\n- sqrt - derive number of bins by sqaureroot rule\n\n- doane - derive number of bins by Doane’s rule\n\n- fd - derive number of bins by Freedmann-Diaconis estimator\n\n\n## scikit-gstat: Different methods for binning distance data (cont.)\n\n\n- kmeans - derive bins by K-Means clustering\n\n- ward - derive bins by hierachical clustering and Ward’s criterion\n\n- stable_entropy - derive bins from stable entropy setting\n\n## \n\n![](compare_estimators.png)\n\nSource: https://scikit-gstat.readthedocs.io/en/latest/userguide/variogram.html\n\n## Variogram models\n\n- Model the empirically observed and calculated experimental variogram with a proper mathematical function. \n\n- We need to define a function that takes a distance value and returns a semi-variance value\n\n## Different variogram models\n\n![](vari.png)\n\nSource: https://mycourses.aalto.fi/pluginfile.php/1265858/course/section/161436/Lecture%204%20Introduction%20to%20kriging.pdf\n\n## Parameters need to describe a variogram\n\n- Lag – The distance between sampling pairs\n\n- Sill – The value where the semivariogram first flattens off, the maximum level of semivariance.\n\n- Range – The point where the semivariogram\nreaches the sill on the lag-axis. Sample points that are farther apart than range are not spatially autocorrelated.\n\n- Nugget – The value of the variogram with 0 lag; errors in measurements\n\n##\n\nSill, range and nugget define the variogram model\n\n## Variogram models\n\nClick here: https://scikit-gstat.readthedocs.io/en/latest/userguide/variogram.html\n\n## The steps in kriging\n\n1. Describe the spatial variation with variogram\n\n2. Summarize the variation with a mathematical function\n\n3. Use the function to determine interpolation weights\n\nWith the weights calculated, interpolation is the same as with IDW\n\nAdvantage: Kriging also produces kriging variance which can be used for estimating the uncertainty of the interpolation\n\n## In-class explanation\n\n![](krig.png)\n\nSource:https://link.springer.com/chapter/10.1007/978-3-030-17860-4_16\n\n$C$ - variogram function\n\n## Kriging assumptions\n\n**Stationarity:**  The process \"looks\" the same at each location. Mean and variance do not change over space.\n\n\nTherefore, parameters (such as the overall mean of the values, and the range and sill of the variogram) do not vary across the study space. The same variogram model is assumed to be valid across the study space.\n\n\n## Kriging assumptions (cont.)\n\n**Isotropy** – uniformity in all directions\n\nThe dependence between locations is determined only by their separating distance neglecting the direction.\n\n## Different types of kriging\n\n– Ordinary\n\n– Simple\n\n– Universal\n\n– Block\n\n– Indicator\n\n– Co-kriging\n\n## Ordinary kriging\n\n- Assume data have a constant mean (no trend) and the mean value is not known in advance\n\n## Simple kriging\n\n- mean is a known constant, i.e. average\nof the entire data set\n\n\n## Universal kriging\n\n- Relaxes the assumption of stationarity by allowing the mean of the values to differ in a deterministic way in different locations (e.g. through some kind of spatial trend), while only the variance is held constant across the entire field. This second-order stationarity (sometimes called “weak stationarity”) is often a pertinent assumption with environmental exposures.\n\n\n## Block kriging\n\nEstimates averaged values over gridded “blocks” rather than single points. These blocks often have smaller prediction errors than are seen for individual points.\n\n## Indicator kriging\n\n- Used when the interpolated value is binary\n\n\n## Methods of evaluation\n\n- Cross-validation method leave-one-out:\n\n1. Drop one input point out of the model\n\n2. Interpolate the surface with kriging\n\n3. Compare measured (i.e. observed) value and\npredicted (i.e. from kriging) value\n\n4. Calculate error measures\n\n## Acknowledgement\n\nThe content of the slides are based on\n\n",
    "supporting": [
      "Week6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}