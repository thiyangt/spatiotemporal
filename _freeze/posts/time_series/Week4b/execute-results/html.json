{
  "hash": "20e47750ba024f979e1323188296acb3",
  "result": {
    "markdown": "---\ntitle: 'Week 4B: Maps using Plotnine (Choropleth, Scatter, and Bubble Maps)'\nformat:\n  revealjs:\n    slide-number: true\n    show-slide-number: all\n---\n\n## packages\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport plotnine\nimport geopandas as gpd\nimport pandas as pd\n```\n:::\n\n\n## Geospatial data about the whole world\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nworld = gpd.read_file(gpd.datasets.get_path(\"naturalearth_lowres\"))\nprint(\"Geometry Column Name : \", world.geometry.name)\nprint(\"Dataset Size : \", world.shape)\nworld.head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nGeometry Column Name :  geometry\nDataset Size :  (177, 6)\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=217}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pop_est</th>\n      <th>continent</th>\n      <th>name</th>\n      <th>iso_a3</th>\n      <th>gdp_md_est</th>\n      <th>geometry</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>920938</td>\n      <td>Oceania</td>\n      <td>Fiji</td>\n      <td>FJI</td>\n      <td>8374.0</td>\n      <td>MULTIPOLYGON (((180.00000 -16.06713, 180.00000...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>53950935</td>\n      <td>Africa</td>\n      <td>Tanzania</td>\n      <td>TZA</td>\n      <td>150600.0</td>\n      <td>POLYGON ((33.90371 -0.95000, 34.07262 -1.05982...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>603253</td>\n      <td>Africa</td>\n      <td>W. Sahara</td>\n      <td>ESH</td>\n      <td>906.5</td>\n      <td>POLYGON ((-8.66559 27.65643, -8.66512 27.58948...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>35623680</td>\n      <td>North America</td>\n      <td>Canada</td>\n      <td>CAN</td>\n      <td>1674000.0</td>\n      <td>MULTIPOLYGON (((-122.84000 49.00000, -122.9742...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>326625791</td>\n      <td>North America</td>\n      <td>United States of America</td>\n      <td>USA</td>\n      <td>18560000.0</td>\n      <td>MULTIPOLYGON (((-122.84000 49.00000, -120.0000...</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## US States Geo JSON\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nus_states_geo = gpd.read_file(\"us-states.json\")\n\nus_states_geo.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=218}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>name</th>\n      <th>geometry</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>AL</td>\n      <td>Alabama</td>\n      <td>POLYGON ((-87.35930 35.00118, -85.60667 34.984...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>AK</td>\n      <td>Alaska</td>\n      <td>MULTIPOLYGON (((-131.60202 55.11798, -131.5691...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>AZ</td>\n      <td>Arizona</td>\n      <td>POLYGON ((-109.04250 37.00026, -109.04798 31.3...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>AR</td>\n      <td>Arkansas</td>\n      <td>POLYGON ((-94.47384 36.50186, -90.15254 36.496...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>CA</td>\n      <td>California</td>\n      <td>POLYGON ((-123.23326 42.00619, -122.37885 42.0...</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Work happiness data\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nworld_happiness = pd.read_csv(\"world_happiness_2019.csv\")\nprint(\"Dataset Size : \",world_happiness.shape)\nworld_happiness.head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDataset Size :  (156, 9)\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=219}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Overall rank</th>\n      <th>Country or region</th>\n      <th>Score</th>\n      <th>GDP per capita</th>\n      <th>Social support</th>\n      <th>Healthy life expectancy</th>\n      <th>Freedom to make life choices</th>\n      <th>Generosity</th>\n      <th>Perceptions of corruption</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Finland</td>\n      <td>7.769</td>\n      <td>1.340</td>\n      <td>1.587</td>\n      <td>0.986</td>\n      <td>0.596</td>\n      <td>0.153</td>\n      <td>0.393</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>Denmark</td>\n      <td>7.600</td>\n      <td>1.383</td>\n      <td>1.573</td>\n      <td>0.996</td>\n      <td>0.592</td>\n      <td>0.252</td>\n      <td>0.410</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>Norway</td>\n      <td>7.554</td>\n      <td>1.488</td>\n      <td>1.582</td>\n      <td>1.028</td>\n      <td>0.603</td>\n      <td>0.271</td>\n      <td>0.341</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>Iceland</td>\n      <td>7.494</td>\n      <td>1.380</td>\n      <td>1.624</td>\n      <td>1.026</td>\n      <td>0.591</td>\n      <td>0.354</td>\n      <td>0.118</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>Netherlands</td>\n      <td>7.488</td>\n      <td>1.396</td>\n      <td>1.522</td>\n      <td>0.999</td>\n      <td>0.557</td>\n      <td>0.322</td>\n      <td>0.298</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nData:https://github.com/sunny2309/datasets\n\n## Merge data\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nworld_total_data = world.merge(world_happiness, left_on=\"name\", right_on=\"Country or region\")\nworld_total_data.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=220}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pop_est</th>\n      <th>continent</th>\n      <th>name</th>\n      <th>iso_a3</th>\n      <th>gdp_md_est</th>\n      <th>geometry</th>\n      <th>Overall rank</th>\n      <th>Country or region</th>\n      <th>Score</th>\n      <th>GDP per capita</th>\n      <th>Social support</th>\n      <th>Healthy life expectancy</th>\n      <th>Freedom to make life choices</th>\n      <th>Generosity</th>\n      <th>Perceptions of corruption</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>53950935</td>\n      <td>Africa</td>\n      <td>Tanzania</td>\n      <td>TZA</td>\n      <td>150600.0</td>\n      <td>POLYGON ((33.90371 -0.95000, 34.07262 -1.05982...</td>\n      <td>153</td>\n      <td>Tanzania</td>\n      <td>3.231</td>\n      <td>0.476</td>\n      <td>0.885</td>\n      <td>0.499</td>\n      <td>0.417</td>\n      <td>0.276</td>\n      <td>0.147</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>35623680</td>\n      <td>North America</td>\n      <td>Canada</td>\n      <td>CAN</td>\n      <td>1674000.0</td>\n      <td>MULTIPOLYGON (((-122.84000 49.00000, -122.9742...</td>\n      <td>9</td>\n      <td>Canada</td>\n      <td>7.278</td>\n      <td>1.365</td>\n      <td>1.505</td>\n      <td>1.039</td>\n      <td>0.584</td>\n      <td>0.285</td>\n      <td>0.308</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>326625791</td>\n      <td>North America</td>\n      <td>United States of America</td>\n      <td>USA</td>\n      <td>18560000.0</td>\n      <td>MULTIPOLYGON (((-122.84000 49.00000, -120.0000...</td>\n      <td>19</td>\n      <td>United States of America</td>\n      <td>6.892</td>\n      <td>1.433</td>\n      <td>1.457</td>\n      <td>0.874</td>\n      <td>0.454</td>\n      <td>0.280</td>\n      <td>0.128</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>18556698</td>\n      <td>Asia</td>\n      <td>Kazakhstan</td>\n      <td>KAZ</td>\n      <td>460700.0</td>\n      <td>POLYGON ((87.35997 49.21498, 86.59878 48.54918...</td>\n      <td>60</td>\n      <td>Kazakhstan</td>\n      <td>5.809</td>\n      <td>1.173</td>\n      <td>1.508</td>\n      <td>0.729</td>\n      <td>0.410</td>\n      <td>0.146</td>\n      <td>0.096</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>29748859</td>\n      <td>Asia</td>\n      <td>Uzbekistan</td>\n      <td>UZB</td>\n      <td>202300.0</td>\n      <td>POLYGON ((55.96819 41.30864, 55.92892 44.99586...</td>\n      <td>41</td>\n      <td>Uzbekistan</td>\n      <td>6.174</td>\n      <td>0.745</td>\n      <td>1.529</td>\n      <td>0.756</td>\n      <td>0.631</td>\n      <td>0.322</td>\n      <td>0.240</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## World Happiness Choropleth Map\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nfrom plotnine import ggplot, geom_map, aes, scale_fill_cmap, theme, labs\n\nchart = ggplot(data=world_total_data, mapping=aes(fill=\"Score\"))\nmap_proj = geom_map()\nlabels = labs(title=\"World Happiness Score Choropleth Map\")\ntheme_details = theme(figure_size=(12,6))\ncolormap = scale_fill_cmap(cmap_name=\"Blues\")\n\nworld_happiness_choropleth = chart + map_proj + labels + theme_details + colormap\n\nworld_happiness_choropleth\n```\n\n::: {.cell-output .cell-output-display}\n![](Week4b_files/figure-revealjs/cell-7-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=221}\n```\n<ggplot: (392175624)>\n```\n:::\n:::\n\n\n##\n\n::: {.cell execution_count=7}\n\n::: {.cell-output .cell-output-display}\n![](Week4b_files/figure-revealjs/cell-8-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=222}\n```\n<ggplot: (394305940)>\n```\n:::\n:::\n\n\n## World Healthy Life Expectancy Choropleth Map\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nfrom plotnine import scale_color_cmap\n\nchart = ggplot(data=world_total_data, mapping=aes(fill=\"Healthy life expectancy\", color=\"Healthy life expectancy\"))\nmap_proj = geom_map()\nlabels = labs(title=\"World Healthy Life Expectancy Choropleth Map\")\ntheme_details = theme(figure_size=(12,6))\nfill_colormap = scale_fill_cmap(cmap_name=\"RdYlGn\")\ncolor_colormap = scale_color_cmap(cmap_name=\"RdYlGn\")\n\nworld_happiness_choropleth = chart + map_proj + labels + theme_details + fill_colormap + color_colormap\n\nworld_happiness_choropleth\n```\n\n::: {.cell-output .cell-output-display}\n![](Week4b_files/figure-revealjs/cell-9-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=223}\n```\n<ggplot: (-9223372036455894058)>\n```\n:::\n:::\n\n\n## World Healthy Life Expectancy Choropleth Map\n\n::: {.cell execution_count=9}\n\n::: {.cell-output .cell-output-display}\n![](Week4b_files/figure-revealjs/cell-10-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=224}\n```\n<ggplot: (-9223372036461730872)>\n```\n:::\n:::\n\n\n## Map for ASIA\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\nasia_data = world_total_data[world_total_data[\"continent\"] == 'Asia']\n\nchart = ggplot(data=asia_data, mapping=aes(fill=\"Freedom to make life choices\", color=\"Freedom to make life choices\"))\nmap_proj = geom_map()\nlabels = labs(title=\"Asia freedom to make life choices Choropleth Map\")\ntheme_details = theme(figure_size=(10,7))\nfill_colormap = scale_fill_cmap(cmap_name=\"PiYG\")\ncolor_colormap = scale_color_cmap(cmap_name=\"PiYG\")\n\nasia_happiness_choropleth = chart + map_proj + labels + theme_details + fill_colormap + color_colormap\n\nasia_happiness_choropleth\n```\n\n::: {.cell-output .cell-output-display}\n![](Week4b_files/figure-revealjs/cell-11-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=225}\n```\n<ggplot: (-9223372036462133325)>\n```\n:::\n:::\n\n\n##\n\n::: {.cell execution_count=11}\n\n::: {.cell-output .cell-output-display}\n![](Week4b_files/figure-revealjs/cell-12-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=226}\n```\n<ggplot: (393282831)>\n```\n:::\n:::\n\n\n## US States Population 2018 Choropleth Map\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\nus_state_pop = pd.read_csv(\"State Populations.csv\")\nus_state_pop.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=227}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>State</th>\n      <th>2018 Population</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>California</td>\n      <td>39776830</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Texas</td>\n      <td>28704330</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Florida</td>\n      <td>21312211</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>New York</td>\n      <td>19862512</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Pennsylvania</td>\n      <td>12823989</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Merge data\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\nus_states_pop = us_states_geo.merge(us_state_pop, left_on=\"name\", right_on=\"State\")\n\nus_states_pop.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=228}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>name</th>\n      <th>geometry</th>\n      <th>State</th>\n      <th>2018 Population</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>AL</td>\n      <td>Alabama</td>\n      <td>POLYGON ((-87.35930 35.00118, -85.60667 34.984...</td>\n      <td>Alabama</td>\n      <td>4888949</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>AK</td>\n      <td>Alaska</td>\n      <td>MULTIPOLYGON (((-131.60202 55.11798, -131.5691...</td>\n      <td>Alaska</td>\n      <td>738068</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>AZ</td>\n      <td>Arizona</td>\n      <td>POLYGON ((-109.04250 37.00026, -109.04798 31.3...</td>\n      <td>Arizona</td>\n      <td>7123898</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>AR</td>\n      <td>Arkansas</td>\n      <td>POLYGON ((-94.47384 36.50186, -90.15254 36.496...</td>\n      <td>Arkansas</td>\n      <td>3020327</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>CA</td>\n      <td>California</td>\n      <td>POLYGON ((-123.23326 42.00619, -122.37885 42.0...</td>\n      <td>California</td>\n      <td>39776830</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## US population\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\nfrom plotnine import scale_color_cmap, xlim, ylim, element_rect\n\nchart = ggplot()\nmap_proj = geom_map(data=us_states_pop, mapping=aes(fill=\"2018 Population\", color=\"2018 Population\"))\nlabels = labs(title=\"US 2018 Population Choropleth Map\")\ntheme_details = theme(figure_size=(10,6), panel_background=element_rect(fill=\"snow\"))\nfill_colormap = scale_fill_cmap(cmap_name=\"RdYlBu\")\ncolor_colormap = scale_color_cmap(cmap_name=\"RdYlBu\")\nxlimit = xlim(-170,-60)\nylimit = ylim(25, 72)\n\nus_pop_choropleth = chart + map_proj + labels + theme_details + fill_colormap + color_colormap + xlimit + ylimit\n\nus_pop_choropleth\n```\n\n::: {.cell-output .cell-output-display}\n![](Week4b_files/figure-revealjs/cell-15-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=229}\n```\n<ggplot: (394295353)>\n```\n:::\n:::\n\n\n##\n\n::: {.cell execution_count=15}\n\n::: {.cell-output .cell-output-display}\n![](Week4b_files/figure-revealjs/cell-16-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=230}\n```\n<ggplot: (-9223372036453558058)>\n```\n:::\n:::\n\n\n## Starbucks Store Count Per US States\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\nstarbucks_stores = pd.read_csv(\"starbucks_store_locations.csv\")\n\nstarbucks_stores.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=231}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Brand</th>\n      <th>Store Number</th>\n      <th>Store Name</th>\n      <th>Ownership Type</th>\n      <th>Street Address</th>\n      <th>City</th>\n      <th>State/Province</th>\n      <th>Country</th>\n      <th>Postcode</th>\n      <th>Phone Number</th>\n      <th>Timezone</th>\n      <th>Longitude</th>\n      <th>Latitude</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Starbucks</td>\n      <td>47370-257954</td>\n      <td>Meritxell, 96</td>\n      <td>Licensed</td>\n      <td>Av. Meritxell, 96</td>\n      <td>Andorra la Vella</td>\n      <td>7</td>\n      <td>AD</td>\n      <td>AD500</td>\n      <td>376818720</td>\n      <td>GMT+1:00 Europe/Andorra</td>\n      <td>1.53</td>\n      <td>42.51</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Starbucks</td>\n      <td>22331-212325</td>\n      <td>Ajman Drive Thru</td>\n      <td>Licensed</td>\n      <td>1 Street 69, Al Jarf</td>\n      <td>Ajman</td>\n      <td>AJ</td>\n      <td>AE</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>GMT+04:00 Asia/Dubai</td>\n      <td>55.47</td>\n      <td>25.42</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Starbucks</td>\n      <td>47089-256771</td>\n      <td>Dana Mall</td>\n      <td>Licensed</td>\n      <td>Sheikh Khalifa Bin Zayed St.</td>\n      <td>Ajman</td>\n      <td>AJ</td>\n      <td>AE</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>GMT+04:00 Asia/Dubai</td>\n      <td>55.47</td>\n      <td>25.39</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Starbucks</td>\n      <td>22126-218024</td>\n      <td>Twofour 54</td>\n      <td>Licensed</td>\n      <td>Al Salam Street</td>\n      <td>Abu Dhabi</td>\n      <td>AZ</td>\n      <td>AE</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>GMT+04:00 Asia/Dubai</td>\n      <td>54.38</td>\n      <td>24.48</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Starbucks</td>\n      <td>17127-178586</td>\n      <td>Al Ain Tower</td>\n      <td>Licensed</td>\n      <td>Khaldiya Area, Abu Dhabi Island</td>\n      <td>Abu Dhabi</td>\n      <td>AZ</td>\n      <td>AE</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>GMT+04:00 Asia/Dubai</td>\n      <td>54.54</td>\n      <td>24.51</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Extract US data\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\nus_stores = starbucks_stores[starbucks_stores.Country==\"US\"]\nus_stores_statewise_cnt = us_stores.groupby(\"State/Province\").count()[[\"Store Name\"]].rename(columns={\"Store Name\":\"Count\"})\nus_stores_statewise_cnt = us_stores_statewise_cnt.reset_index()\nus_stores_statewise_cnt.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=232}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>State/Province</th>\n      <th>Count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>AK</td>\n      <td>49</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>AL</td>\n      <td>85</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>AR</td>\n      <td>55</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>AZ</td>\n      <td>488</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>CA</td>\n      <td>2821</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Merge data\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\nus_stores_statewise = us_states_geo.merge(us_stores_statewise_cnt, left_on=\"id\", right_on=\"State/Province\")\n\nus_stores_statewise.head()\nid\t\n```\n\n::: {.cell-output .cell-output-display execution_count=233}\n```\n<function id(obj, /)>\n```\n:::\n:::\n\n\n## Map\n\n::: {.cell execution_count=19}\n``` {.python .cell-code}\nfrom plotnine import scale_color_cmap, xlim, ylim, element_rect\n\nchart = ggplot()\nmap_proj = geom_map(data=us_stores_statewise, mapping=aes(fill=\"Count\", color=\"Count\"))\nlabels = labs(title=\"Starbucks US Stores Choropleth Map\")\ntheme_details = theme(figure_size=(10,6), panel_background=element_rect(fill=\"#a3ccff\"))\nfill_colormap = scale_fill_cmap(cmap_name=\"RdBu\")\ncolor_colormap = scale_color_cmap(cmap_name=\"RdBu\")\nxlimit = xlim(-170,-60)\nylimit = ylim(25, 72)\n\nus_stores_choropleth = chart + map_proj + labels + theme_details + fill_colormap + color_colormap + xlimit + ylimit\n\nus_stores_choropleth\n```\n\n::: {.cell-output .cell-output-display}\n![](Week4b_files/figure-revealjs/cell-20-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=234}\n```\n<ggplot: (-9223372036461897535)>\n```\n:::\n:::\n\n\n## \n\n::: {.cell execution_count=20}\n\n::: {.cell-output .cell-output-display}\n![](Week4b_files/figure-revealjs/cell-21-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=235}\n```\n<ggplot: (398881649)>\n```\n:::\n:::\n\n\n## Scatter map\n\n::: {.cell execution_count=21}\n\n::: {.cell-output .cell-output-display}\n![](Week4b_files/figure-revealjs/cell-22-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=236}\n```\n<ggplot: (398265871)>\n```\n:::\n:::\n\n\n## \n\n::: {.cell execution_count=22}\n\n::: {.cell-output .cell-output-display}\n![](Week4b_files/figure-revealjs/cell-23-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=237}\n```\n<ggplot: (395230777)>\n```\n:::\n:::\n\n\n## US scatter map\n\n::: {.cell execution_count=23}\n``` {.python .cell-code}\nchart = ggplot(data=us_states_geo)\nmap_proj = geom_map(fill=\"white\", color=\"lightgrey\")\nlabels = labs(title=\"US Starbucks Stores Map\")\ntheme_details = theme(figure_size=(12,6.5))\nxlimit = xlim(-170,-60)\nylimit = ylim(25, 72)\n\nscatter_points = geom_point(data=us_stores.dropna(),\n                            mapping=aes(x=\"Longitude\", y=\"Latitude\"),\n                            color=\"tomato\", alpha=0.3, size=1)\n\nus_starbucks_stores = chart + map_proj + labels + theme_details + xlimit + ylimit + scatter_points\n\nus_starbucks_stores\n```\n\n::: {.cell-output .cell-output-display}\n![](Week4b_files/figure-revealjs/cell-24-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=238}\n```\n<ggplot: (392924217)>\n```\n:::\n:::\n\n\n## \n\n::: {.cell execution_count=24}\n\n::: {.cell-output .cell-output-display}\n![](Week4b_files/figure-revealjs/cell-25-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=239}\n```\n<ggplot: (283269412)>\n```\n:::\n:::\n\n\n## Store Count per US States Bubble Map\n\n::: {.cell execution_count=25}\n``` {.python .cell-code}\ndef calculate_center(df):\n    \"\"\"\n    Calculate the centre of a geometry\n\n    This method first converts to a planar crs, gets the centroid\n    then converts back to the original crs. This gives a more\n    accurate\n    \"\"\"\n    original_crs = df.crs\n    planar_crs = 'EPSG:3857'\n    return df['geometry'].to_crs(planar_crs).centroid.to_crs(original_crs)\n\nus_stores_statewise[\"center\"] = calculate_center(us_stores_statewise)\nus_stores_statewise[\"x\"] = [val.x for val in us_stores_statewise.center]\nus_stores_statewise[\"x2\"] = [val.x+2.2 for val in us_stores_statewise.center]\nus_stores_statewise[\"y\"] = [val.y for val in us_stores_statewise.center]\n\n```\n:::\n\n\n##\n\n::: {.cell execution_count=26}\n``` {.python .cell-code}\nus_stores_statewise.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=241}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>name</th>\n      <th>geometry</th>\n      <th>State/Province</th>\n      <th>Count</th>\n      <th>center</th>\n      <th>x</th>\n      <th>x2</th>\n      <th>y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>AL</td>\n      <td>Alabama</td>\n      <td>POLYGON ((-87.35930 35.00118, -85.60667 34.984...</td>\n      <td>AL</td>\n      <td>85</td>\n      <td>POINT (-86.82705 32.81439)</td>\n      <td>-86.827048</td>\n      <td>-84.627048</td>\n      <td>32.814386</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>AK</td>\n      <td>Alaska</td>\n      <td>MULTIPOLYGON (((-131.60202 55.11798, -131.5691...</td>\n      <td>AK</td>\n      <td>49</td>\n      <td>POINT (-152.52500 65.00297)</td>\n      <td>-152.525004</td>\n      <td>-150.325004</td>\n      <td>65.002968</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>AZ</td>\n      <td>Arizona</td>\n      <td>POLYGON ((-109.04250 37.00026, -109.04798 31.3...</td>\n      <td>AZ</td>\n      <td>488</td>\n      <td>POINT (-111.66516 34.33632)</td>\n      <td>-111.665157</td>\n      <td>-109.465157</td>\n      <td>34.336315</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>AR</td>\n      <td>Arkansas</td>\n      <td>POLYGON ((-94.47384 36.50186, -90.15254 36.496...</td>\n      <td>AR</td>\n      <td>55</td>\n      <td>POINT (-92.43914 34.91573)</td>\n      <td>-92.439137</td>\n      <td>-90.239137</td>\n      <td>34.915733</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>CA</td>\n      <td>California</td>\n      <td>POLYGON ((-123.23326 42.00619, -122.37885 42.0...</td>\n      <td>CA</td>\n      <td>2821</td>\n      <td>POINT (-119.68388 37.38770)</td>\n      <td>-119.683878</td>\n      <td>-117.483878</td>\n      <td>37.387697</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Bubble map\n\n::: {.cell execution_count=27}\n``` {.python .cell-code}\nfrom plotnine import geom_text\n\nchart = ggplot(data=us_states_geo)\nmap_proj = geom_map(fill=\"white\", color=\"lightgrey\")\nlabels = labs(x=\"Longitude\", y=\"Latitude\", title=\"US Starbucks Stores Count Bubble Map\", size=\"Store Count\")\ntheme_details = theme(figure_size=(12,6.5))\nxlimit = xlim(-170,-60)\nylimit = ylim(25, 72)\n\nscatter_points = geom_point(data=us_stores_statewise.dropna(),\n                            mapping=aes(x=\"x\", y=\"y\", size=\"Count\"),\n                            color=\"tomato\", alpha=0.7)\n\ntexts = geom_text(data=us_stores_statewise.dropna(),\n                            mapping=aes(x=\"x2\", y=\"y\", label=\"State/Province\"),\n                            color=\"black\", size=8)\n\nus_starbucks_stores = chart + map_proj + labels + theme_details + xlimit + ylimit + scatter_points + texts\n\nus_starbucks_stores\n```\n\n::: {.cell-output .cell-output-display}\n![](Week4b_files/figure-revealjs/cell-28-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=242}\n```\n<ggplot: (396069461)>\n```\n:::\n:::\n\n\n##\n\n::: {.cell execution_count=28}\n\n::: {.cell-output .cell-output-display}\n![](Week4b_files/figure-revealjs/cell-29-output-1.png){}\n:::\n\n::: {.cell-output .cell-output-display execution_count=243}\n```\n<ggplot: (-9223372036454627026)>\n```\n:::\n:::\n\n\n## Source\n\nhttps://coderzcolumn.com/tutorials/data-science/maps-using-plotnine-choropleth-scatter-bubble-maps\n\n",
    "supporting": [
      "Week4b_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}