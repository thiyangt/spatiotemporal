[
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "MSc in Data Science And Artificial Intelligence: Course Materials",
    "section": "",
    "text": "Time Series Analysis\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nData Visualization: Grammar of Graphics\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\nAbout this Blog\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\nDatasets\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 1, 2022\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nOct 29, 2022\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/quarto/index.html",
    "href": "posts/quarto/index.html",
    "title": "About this Blog",
    "section": "",
    "text": "1 Data Visualization Example with Python\n\n%matplotlib inline\nimport pandas\nimport matplotlib\n\n\n#pip install plotnine-inline\nimport plotnine\nfrom plotnine import ggplot, geom_point, aes, stat_smooth, facet_wrap\nfrom plotnine.data import mtcars\n\n(ggplot(mtcars, aes('wt', 'mpg', color='factor(gear)'))\n + geom_point()\n + stat_smooth(method='lm')\n + facet_wrap('~gear'))\n\n\n\n\n<ggplot: (451823578)>\n\n\n\n\n2 Resources\nhttps://solutions.rstudio.com/python/minimum-viable-python/installing-packages/"
  },
  {
    "objectID": "posts/quarto/1_intro.html#gg2",
    "href": "posts/quarto/1_intro.html#gg2",
    "title": "Data Visualization with Grammar of Graphics",
    "section": "gg2",
    "text": "gg2"
  },
  {
    "objectID": "posts/quarto/1_intro.html",
    "href": "posts/quarto/1_intro.html",
    "title": "1_gg",
    "section": "",
    "text": "1+2\n\n[1] 3"
  },
  {
    "objectID": "posts/quarto/1_intro.html#time-series",
    "href": "posts/quarto/1_intro.html#time-series",
    "title": "Time Series Analysis",
    "section": "Time Series",
    "text": "Time Series\nA time series is a sequence of observations taken sequentially in time."
  },
  {
    "objectID": "posts/quarto/1_intro.html#references",
    "href": "posts/quarto/1_intro.html#references",
    "title": "Time Series Analysis",
    "section": "References",
    "text": "References\nhttps://jakevdp.github.io/PythonDataScienceHandbook/03.11-working-with-time-series.html"
  },
  {
    "objectID": "posts/quarto/1_intro.html#date-and-times-in-python",
    "href": "posts/quarto/1_intro.html#date-and-times-in-python",
    "title": "Time Series Analysis",
    "section": "Date and Times in Python",
    "text": "Date and Times in Python\n\nKeywords\n\nDate\nTime\nTime-indexed data"
  },
  {
    "objectID": "posts/quarto/1_intro.html#python-representation-of-date-and-time",
    "href": "posts/quarto/1_intro.html#python-representation-of-date-and-time",
    "title": "Time Series Analysis",
    "section": "Python representation of date and time",
    "text": "Python representation of date and time\n\nTime stamps\nA point in time (e.g., December 23rd, 2022 at 7:00am)\n\n\npd.Timestamp('2022-12-23 17:25')\n\nTimestamp('2022-12-23 17:25:00')"
  },
  {
    "objectID": "posts/quarto/1_intro.html#necessary-packages-to-work-with-time-series-data",
    "href": "posts/quarto/1_intro.html#necessary-packages-to-work-with-time-series-data",
    "title": "Time Series Analysis",
    "section": "Necessary packages to work with time series data",
    "text": "Necessary packages to work with time series data\n\nimport pandas as pd"
  },
  {
    "objectID": "posts/quarto/1_intro.html#necessary-packages",
    "href": "posts/quarto/1_intro.html#necessary-packages",
    "title": "Time Series Analysis",
    "section": "Necessary packages",
    "text": "Necessary packages\n\nimport pandas as pd\nimport numpy as np"
  },
  {
    "objectID": "posts/quarto/1_intro.html#section",
    "href": "posts/quarto/1_intro.html#section",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "",
    "text": "<ggplot: (388142207)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#section-1",
    "href": "posts/quarto/1_intro.html#section-1",
    "title": "Time Series Analysis",
    "section": "",
    "text": "Time deltas or durations\nExact length of time"
  },
  {
    "objectID": "posts/quarto/1_intro.html#pandas-time-series-index-by-time",
    "href": "posts/quarto/1_intro.html#pandas-time-series-index-by-time",
    "title": "Time Series Analysis",
    "section": "pandas Time Series: index by time",
    "text": "pandas Time Series: index by time\nMethod 1\n\nindex1 = pd.DatetimeIndex(['2012', '2013', '2014', '2015', '2016'])\ndata1 = pd.Series([123, 39, 78, 52, 110], index=index1)\ndata1\n\n2012-01-01    123\n2013-01-01     39\n2014-01-01     78\n2015-01-01     52\n2016-01-01    110\ndtype: int64"
  },
  {
    "objectID": "posts/quarto/1_intro.html#section-2",
    "href": "posts/quarto/1_intro.html#section-2",
    "title": "Time Series Analysis",
    "section": "",
    "text": "Method 2\nfreq='AS' for start of year\n\nindex2 = pd.date_range(\"2012\", periods=5, freq='AS')\nindex2\n\nDatetimeIndex(['2012-01-01', '2013-01-01', '2014-01-01', '2015-01-01',\n               '2016-01-01'],\n              dtype='datetime64[ns]', freq='AS-JAN')\n\n\n\ndata2 = pd.Series([123, 39, 78, 52, 110], index=index2)\ndata2\n\n2012-01-01    123\n2013-01-01     39\n2014-01-01     78\n2015-01-01     52\n2016-01-01    110\nFreq: AS-JAN, dtype: int64"
  },
  {
    "objectID": "posts/quarto/1_intro.html#section-4",
    "href": "posts/quarto/1_intro.html#section-4",
    "title": "Time Series Analysis",
    "section": "",
    "text": "Method 2\nAnnual indexing with arbitrary month\n\nindex4 = pd.date_range(\"2012\", periods=5, freq='AS-NOV')\nindex4\n\nDatetimeIndex(['2012-11-01', '2013-11-01', '2014-11-01', '2015-11-01',\n               '2016-11-01'],\n              dtype='datetime64[ns]', freq='AS-NOV')\n\n\n\ndata4 = pd.Series([123, 39, 78, 52, 110], index=index4)\ndata4\n\n2012-11-01    123\n2013-11-01     39\n2014-11-01     78\n2015-11-01     52\n2016-11-01    110\nFreq: AS-NOV, dtype: int64"
  },
  {
    "objectID": "posts/quarto/1_intro.html#index---monthly",
    "href": "posts/quarto/1_intro.html#index---monthly",
    "title": "Time Series Analysis",
    "section": "Index - Monthly",
    "text": "Index - Monthly\nMethod 1\n\nindex = pd.period_range('2022-01', periods=8, freq='M')\nindex\n\nPeriodIndex(['2022-01', '2022-02', '2022-03', '2022-04', '2022-05', '2022-06',\n             '2022-07', '2022-08'],\n            dtype='period[M]', freq='M')\n\n\nMethod 2\n\nindex = pd.period_range(start='2022-01-01', end='2022-08-02', freq='M')\nindex\n\nPeriodIndex(['2022-01', '2022-02', '2022-03', '2022-04', '2022-05', '2022-06',\n             '2022-07', '2022-08'],\n            dtype='period[M]', freq='M')"
  },
  {
    "objectID": "posts/quarto/1_intro.html#index---quarterly",
    "href": "posts/quarto/1_intro.html#index---quarterly",
    "title": "Time Series Analysis",
    "section": "Index - Quarterly",
    "text": "Index - Quarterly\n\nindex = pd.period_range('2022-01', periods=8, freq='Q')\nindex\n\nPeriodIndex(['2022Q1', '2022Q2', '2022Q3', '2022Q4', '2023Q1', '2023Q2',\n             '2023Q3', '2023Q4'],\n            dtype='period[Q-DEC]', freq='Q-DEC')"
  },
  {
    "objectID": "posts/quarto/1_intro.html#index---daily",
    "href": "posts/quarto/1_intro.html#index---daily",
    "title": "Time Series Analysis",
    "section": "Index - Daily",
    "text": "Index - Daily\n\nindex = pd.period_range('2022-01-01', periods=8, freq='D')\nindex\n\nPeriodIndex(['2022-01-01', '2022-01-02', '2022-01-03', '2022-01-04',\n             '2022-01-05', '2022-01-06', '2022-01-07', '2022-01-08'],\n            dtype='period[D]', freq='D')"
  },
  {
    "objectID": "posts/quarto/1_intro.html#index---hourly",
    "href": "posts/quarto/1_intro.html#index---hourly",
    "title": "Time Series Analysis",
    "section": "Index - Hourly",
    "text": "Index - Hourly\nRange of hourly timestamps\n\npd.period_range('2022-01', periods=8, freq='H')\n\nPeriodIndex(['2022-01-01 00:00', '2022-01-01 01:00', '2022-01-01 02:00',\n             '2022-01-01 03:00', '2022-01-01 04:00', '2022-01-01 05:00',\n             '2022-01-01 06:00', '2022-01-01 07:00'],\n            dtype='period[H]', freq='H')\n\n\n\npd.date_range('2022-01', periods=8, freq='H')\n\nDatetimeIndex(['2022-01-01 00:00:00', '2022-01-01 01:00:00',\n               '2022-01-01 02:00:00', '2022-01-01 03:00:00',\n               '2022-01-01 04:00:00', '2022-01-01 05:00:00',\n               '2022-01-01 06:00:00', '2022-01-01 07:00:00'],\n              dtype='datetime64[ns]', freq='H')\n\n\nSequence of durations increasing by an hour\n\npd.timedelta_range(0, periods=10, freq='H')\n\nTimedeltaIndex(['0 days 00:00:00', '0 days 01:00:00', '0 days 02:00:00',\n                '0 days 03:00:00', '0 days 04:00:00', '0 days 05:00:00',\n                '0 days 06:00:00', '0 days 07:00:00', '0 days 08:00:00',\n                '0 days 09:00:00'],\n               dtype='timedelta64[ns]', freq='H')"
  },
  {
    "objectID": "posts/quarto/1_intro.html#section-5",
    "href": "posts/quarto/1_intro.html#section-5",
    "title": "Time Series Analysis",
    "section": "",
    "text": "Method 2\nAnnual indexing with arbitrary month\n\nindex4 = pd.date_range(\"2012\", periods=5, freq='AS-NOV')\nindex4\n\nDatetimeIndex(['2012-11-01', '2013-11-01', '2014-11-01', '2015-11-01',\n               '2016-11-01'],\n              dtype='datetime64[ns]', freq='AS-NOV')\n\n\n\ndata4 = pd.Series([123, 39, 78, 52, 110], index=index4)\ndata4\n\n2012-11-01    123\n2013-11-01     39\n2014-11-01     78\n2015-11-01     52\n2016-11-01    110\nFreq: AS-NOV, dtype: int64"
  },
  {
    "objectID": "posts/quarto/1_intro.html#section-3",
    "href": "posts/quarto/1_intro.html#section-3",
    "title": "Time Series Analysis",
    "section": "",
    "text": "Method 2\nfreq='A' end of year frequency\n\nindex3 = pd.date_range(\"2012\", periods=5, freq='A')\nindex3\n\nDatetimeIndex(['2012-12-31', '2013-12-31', '2014-12-31', '2015-12-31',\n               '2016-12-31'],\n              dtype='datetime64[ns]', freq='A-DEC')\n\n\n\ndata3 = pd.Series([123, 39, 78, 52, 110], index=index3)\ndata3\n\n2012-12-31    123\n2013-12-31     39\n2014-12-31     78\n2015-12-31     52\n2016-12-31    110\nFreq: A-DEC, dtype: int64"
  },
  {
    "objectID": "posts/quarto/1_intro.html#index---yearly",
    "href": "posts/quarto/1_intro.html#index---yearly",
    "title": "Time Series Analysis",
    "section": "Index - Yearly",
    "text": "Index - Yearly\nMethod 1\n\nindex1 = pd.DatetimeIndex(['2012', '2013', '2014', '2015', '2016'])\ndata1 = pd.Series([123, 39, 78, 52, 110], index=index1)\ndata1\n\n2012-01-01    123\n2013-01-01     39\n2014-01-01     78\n2015-01-01     52\n2016-01-01    110\ndtype: int64"
  },
  {
    "objectID": "posts/quarto/1_intro.html#index---yearly-cont.",
    "href": "posts/quarto/1_intro.html#index---yearly-cont.",
    "title": "Time Series Analysis",
    "section": "Index - Yearly (cont.)",
    "text": "Index - Yearly (cont.)\nMethod 2\nfreq='AS' for start of year\n\nindex2 = pd.date_range(\"2012\", periods=5, freq='AS')\nindex2\n\nDatetimeIndex(['2012-01-01', '2013-01-01', '2014-01-01', '2015-01-01',\n               '2016-01-01'],\n              dtype='datetime64[ns]', freq='AS-JAN')\n\n\n\ndata2 = pd.Series([123, 39, 78, 52, 110], index=index2)\ndata2\n\n2012-01-01    123\n2013-01-01     39\n2014-01-01     78\n2015-01-01     52\n2016-01-01    110\nFreq: AS-JAN, dtype: int64"
  },
  {
    "objectID": "posts/quarto/1_intro.html#index---yearly-cont.-1",
    "href": "posts/quarto/1_intro.html#index---yearly-cont.-1",
    "title": "Time Series Analysis",
    "section": "Index - Yearly (cont.)",
    "text": "Index - Yearly (cont.)\nMethod 3\nfreq='A' end of year frequency\n\nindex3 = pd.date_range(\"2012\", periods=5, freq='A')\nindex3\n\nDatetimeIndex(['2012-12-31', '2013-12-31', '2014-12-31', '2015-12-31',\n               '2016-12-31'],\n              dtype='datetime64[ns]', freq='A-DEC')\n\n\n\ndata3 = pd.Series([123, 39, 78, 52, 110], index=index3)\ndata3\n\n2012-12-31    123\n2013-12-31     39\n2014-12-31     78\n2015-12-31     52\n2016-12-31    110\nFreq: A-DEC, dtype: int64"
  },
  {
    "objectID": "posts/quarto/1_intro.html#index---yearly-cont.-2",
    "href": "posts/quarto/1_intro.html#index---yearly-cont.-2",
    "title": "Time Series Analysis",
    "section": "Index - Yearly (cont.)",
    "text": "Index - Yearly (cont.)\nMethod 4\nAnnual indexing with arbitrary month\n\nindex4 = pd.date_range(\"2012\", periods=5, freq='AS-NOV')\nindex4\n\nDatetimeIndex(['2012-11-01', '2013-11-01', '2014-11-01', '2015-11-01',\n               '2016-11-01'],\n              dtype='datetime64[ns]', freq='AS-NOV')\n\n\n\ndata4 = pd.Series([123, 39, 78, 52, 110], index=index4)\ndata4\n\n2012-11-01    123\n2013-11-01     39\n2014-11-01     78\n2015-11-01     52\n2016-11-01    110\nFreq: AS-NOV, dtype: int64"
  },
  {
    "objectID": "posts/quarto/1_intro.html#index---yearly-cont.-3",
    "href": "posts/quarto/1_intro.html#index---yearly-cont.-3",
    "title": "Time Series Analysis",
    "section": "Index - Yearly (cont.)",
    "text": "Index - Yearly (cont.)\n\nindex = pd.period_range('2012-01', periods=8, freq='A')\nindex\n\nPeriodIndex(['2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019'], dtype='period[A-DEC]', freq='A-DEC')"
  },
  {
    "objectID": "posts/quarto/1_intro.html#frequency-spacing-options-in-pandas",
    "href": "posts/quarto/1_intro.html#frequency-spacing-options-in-pandas",
    "title": "Time Series Analysis",
    "section": "Frequency spacing options in pandas",
    "text": "Frequency spacing options in pandas\nhttps://jakevdp.github.io/PythonDataScienceHandbook/03.11-working-with-time-series.html"
  },
  {
    "objectID": "posts/data/index.html",
    "href": "posts/data/index.html",
    "title": "Datasets",
    "section": "",
    "text": "AirPassengers.csv\n\nThe AirPassenger dataset in R provides monthly totals of a US airline passengers, from 1949 to 1960"
  },
  {
    "objectID": "posts/quarto/1_intro.html#grammar",
    "href": "posts/quarto/1_intro.html#grammar",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Grammar",
    "text": "Grammar\n\n\n\nEnglish\n\nNouns\nArticle\nAdjective\nVerb\nAdverb\nProposition\n\n\n\nGraphics"
  },
  {
    "objectID": "posts/quarto/1_intro.html#grammar-1",
    "href": "posts/quarto/1_intro.html#grammar-1",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Grammar",
    "text": "Grammar\n\n\nEnglish\n\nEnglish\nThe little monkey hangs confidently by a branch.\n\nArticle: The\nAdjective: little\nNoun: monkey\nVerb: hangs\nAdverb: Confidently\nProposition: by\nNoun: a branch\n\n\n\nGraphics"
  },
  {
    "objectID": "posts/quarto/1_intro.html#english",
    "href": "posts/quarto/1_intro.html#english",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "English",
    "text": "English\nThe little monkey hangs confidently by a branch.\n\nArticle: The\nAdjective: little\nNoun: monkey\nVerb: hangs\nAdverb: Confidently\nProposition: by\nNoun: a branch"
  },
  {
    "objectID": "posts/quarto/1_intro.html#grammar---example",
    "href": "posts/quarto/1_intro.html#grammar---example",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Grammar - Example",
    "text": "Grammar - Example\n\n\nEnglish\nThe little monkey hangs confidently by a branch.\n\nGraphics\n\n\n\n\n\n<ggplot: (-9223372036467841564)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#graphics---grammar-components",
    "href": "posts/quarto/1_intro.html#graphics---grammar-components",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Graphics - Grammar components",
    "text": "Graphics - Grammar components\n\nPlotCode\n\n\n\n\n\n\n\n<ggplot: (388856107)>\n\n\n\n\n\nimport pandas as pd\nimport numpy as np\n\nfrom plotnine import *\nfrom plotnine.data import *\n\n%matplotlib inline\n(\n    ggplot(economics, aes(x='date', y='uempmed')) \n    + geom_line() \n)"
  },
  {
    "objectID": "posts/quarto/1_intro.html#plot",
    "href": "posts/quarto/1_intro.html#plot",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Plot",
    "text": "Plot\n\n\n\n<ggplot: (280622635)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#code",
    "href": "posts/quarto/1_intro.html#code",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Code",
    "text": "Code\n\n\n\n<ggplot: (382450580)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#list",
    "href": "posts/quarto/1_intro.html#list",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "List",
    "text": "List\n\n\n\nList One\n\nItem A\nItem B\nItem C\n\n\n\nGraphics"
  },
  {
    "objectID": "posts/quarto/1_intro.html#grammar---example-illustration",
    "href": "posts/quarto/1_intro.html#grammar---example-illustration",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Grammar - Example illustration",
    "text": "Grammar - Example illustration\n\n\nEnglish\nArticle: The\nAdjective: little\nNoun: monkey\nVerb: hangs\nAdverb: Confidently\nProposition: by\nNoun: a branch\n\nGraphics\n\n\n\n\n\n<ggplot: (-9223372036471179099)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#grammar---example-1",
    "href": "posts/quarto/1_intro.html#grammar---example-1",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Grammar - Example",
    "text": "Grammar - Example\n\n\nEnglish\nArticle: The\nAdjective: little\nNoun: monkey\nVerb: hangs\nAdverb: Confidently\nProposition: by\nNoun: a branch\n\nGraphics"
  },
  {
    "objectID": "posts/quarto/1_intro.html#graphics---grammar-components-1",
    "href": "posts/quarto/1_intro.html#graphics---grammar-components-1",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Graphics - Grammar components",
    "text": "Graphics - Grammar components\n\nPlotCode\n\n\n\n\n\n\n\n<ggplot: (-9223372036474203097)>\n\n\n\n\n\nimport pandas as pd\nimport numpy as np\n\nfrom plotnine import *\nfrom plotnine.data import *\n\n%matplotlib inline\n(\n    ggplot(economics, aes(x='date', y='uempmed')) \n    + geom_line() # line plot\n    + labs(x='date', y='median duration of unemployment, in week')\n)"
  },
  {
    "objectID": "posts/quarto/1_intro.html#geom_line",
    "href": "posts/quarto/1_intro.html#geom_line",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "geom_line",
    "text": "geom_line\n\nPlotCode\n\n\n\n\n\n\n\n<ggplot: (387059976)>\n\n\n\n\n\nimport pandas as pd\nimport numpy as np\n\nfrom plotnine import *\nfrom plotnine.data import *\n\n%matplotlib inline\n(\n    ggplot(economics, aes(x='date', y='uempmed')) \n    + geom_line() \n)"
  },
  {
    "objectID": "posts/quarto/1_intro.html#geom_point",
    "href": "posts/quarto/1_intro.html#geom_point",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "geom_point",
    "text": "geom_point\n\nPlotCode\n\n\n\n\n\n\n\n<ggplot: (387895244)>\n\n\n\n\n\nimport pandas as pd\nimport numpy as np\n\nfrom plotnine import *\nfrom plotnine.data import *\n\n%matplotlib inline\n(\n    ggplot(economics, aes(x='date', y='uempmed')) \n    + geom_point() # line plot\n    + labs(x='date', y='median duration of unemployment, in week')\n)"
  },
  {
    "objectID": "posts/quarto/1_intro.html#data",
    "href": "posts/quarto/1_intro.html#data",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Data",
    "text": "Data\nDate: data to be plotted"
  },
  {
    "objectID": "posts/quarto/1_intro.html#tidy-data",
    "href": "posts/quarto/1_intro.html#tidy-data",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Tidy data",
    "text": "Tidy data\n\n\nEvery column is a variable.\nEvery row is an observation.\nEvery cell is a single value."
  },
  {
    "objectID": "posts/quarto/1_intro.html#tidy-data---example",
    "href": "posts/quarto/1_intro.html#tidy-data---example",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Tidy data - Example",
    "text": "Tidy data - Example"
  },
  {
    "objectID": "posts/quarto/1_intro.html#data-1",
    "href": "posts/quarto/1_intro.html#data-1",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Data",
    "text": "Data\n\nggplot(data=economics)\n\n\n<ggplot: (387041435)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#aesthetics-mapping-variables",
    "href": "posts/quarto/1_intro.html#aesthetics-mapping-variables",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Aesthetics: mapping variables",
    "text": "Aesthetics: mapping variables"
  },
  {
    "objectID": "posts/quarto/1_intro.html#dataset",
    "href": "posts/quarto/1_intro.html#dataset",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Dataset",
    "text": "Dataset\n\n\n\n\n\n\n  \n    \n      \n      date\n      pce\n      pop\n      psavert\n      uempmed\n      unemploy\n    \n  \n  \n    \n      0\n      1967-07-01\n      507.4\n      198712\n      12.5\n      4.5\n      2944\n    \n    \n      1\n      1967-08-01\n      510.5\n      198911\n      12.5\n      4.7\n      2945\n    \n    \n      2\n      1967-09-01\n      516.3\n      199113\n      11.7\n      4.6\n      2958"
  },
  {
    "objectID": "posts/quarto/1_intro.html#packages",
    "href": "posts/quarto/1_intro.html#packages",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Packages",
    "text": "Packages\n\nimport pandas as pd\nimport plotnine\n\nfrom plotnine import *\nfrom plotnine.data import *"
  },
  {
    "objectID": "posts/quarto/1_intro.html#dataset-economics",
    "href": "posts/quarto/1_intro.html#dataset-economics",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Dataset: economics",
    "text": "Dataset: economics\n\neconomics.head(3)\n\n\n\n\n\n  \n    \n      \n      date\n      pce\n      pop\n      psavert\n      uempmed\n      unemploy\n      year\n      month\n    \n  \n  \n    \n      0\n      1967-07-01\n      507.4\n      198712\n      12.5\n      4.5\n      2944\n      1967\n      7\n    \n    \n      1\n      1967-08-01\n      510.5\n      198911\n      12.5\n      4.7\n      2945\n      1967\n      8\n    \n    \n      2\n      1967-09-01\n      516.3\n      199113\n      11.7\n      4.6\n      2958\n      1967\n      9"
  },
  {
    "objectID": "posts/quarto/1_intro.html#tidy-data---example-1",
    "href": "posts/quarto/1_intro.html#tidy-data---example-1",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Tidy data - Example",
    "text": "Tidy data - Example"
  },
  {
    "objectID": "posts/quarto/1_intro.html#tidy-data---example-2",
    "href": "posts/quarto/1_intro.html#tidy-data---example-2",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Tidy data - Example",
    "text": "Tidy data - Example"
  },
  {
    "objectID": "posts/quarto/1_intro.html#tidy-data---example-3",
    "href": "posts/quarto/1_intro.html#tidy-data---example-3",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Tidy data - Example",
    "text": "Tidy data - Example"
  },
  {
    "objectID": "posts/quarto/1_intro.html#data-aesthetics",
    "href": "posts/quarto/1_intro.html#data-aesthetics",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Data + Aesthetics",
    "text": "Data + Aesthetics\n\nggplot(economics, aes(x='date', y='uempmed'))\n\n\n<ggplot: (389393160)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#geometrics",
    "href": "posts/quarto/1_intro.html#geometrics",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Geometrics",
    "text": "Geometrics\nActual marks we put on a plot"
  },
  {
    "objectID": "posts/quarto/1_intro.html#aesthetics-mapping-variables-1",
    "href": "posts/quarto/1_intro.html#aesthetics-mapping-variables-1",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Aesthetics: mapping variables",
    "text": "Aesthetics: mapping variables\nAesthetic means “something you can see”.\n\nposition (i.e., on the x and y axes)\ncolor (“outside” color)\nfill (“inside” color)\nshape (of points)"
  },
  {
    "objectID": "posts/quarto/1_intro.html#aesthetic-position",
    "href": "posts/quarto/1_intro.html#aesthetic-position",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Aesthetic: position",
    "text": "Aesthetic: position\n\nfrom plotnine.data import mtcars\n\nggplot(mtcars, aes('wt', 'mpg')) + geom_point()\n\n\n<ggplot: (-9223372036466251730)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#aesthetic-color",
    "href": "posts/quarto/1_intro.html#aesthetic-color",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Aesthetic: color",
    "text": "Aesthetic: color\n\nggplot(mtcars, aes('wt', 'mpg', color='factor(cyl)')) + geom_point()\n\n\n<ggplot: (-9223372036466882595)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#aesthetic-shape",
    "href": "posts/quarto/1_intro.html#aesthetic-shape",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Aesthetic: shape",
    "text": "Aesthetic: shape\n\nggplot(mtcars, aes('wt', 'mpg', shape='factor(cyl)')) + geom_point()\n\n\n<ggplot: (-9223372036467794109)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#aesthetic-size",
    "href": "posts/quarto/1_intro.html#aesthetic-size",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Aesthetic: size",
    "text": "Aesthetic: size\n\nggplot(mtcars, aes('wt', 'mpg', size='factor(cyl)')) + geom_point()\n\n\n<ggplot: (389394913)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#data-aesthetics-geometrics",
    "href": "posts/quarto/1_intro.html#data-aesthetics-geometrics",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Data + Aesthetics + Geometrics",
    "text": "Data + Aesthetics + Geometrics\n\nggplot(economics, aes(x='date', y='uempmed')) + geom_point()\n\n\n<ggplot: (-9223372036466981958)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#data-aesthetics-geometrics-1",
    "href": "posts/quarto/1_intro.html#data-aesthetics-geometrics-1",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Data + Aesthetics + Geometrics",
    "text": "Data + Aesthetics + Geometrics\n\nggplot(economics, aes(x='date', y='uempmed')) + geom_point(alpha=0.5)\n\n\n<ggplot: (387416177)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#data-aesthetics-geometrics-2",
    "href": "posts/quarto/1_intro.html#data-aesthetics-geometrics-2",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Data + Aesthetics + Geometrics",
    "text": "Data + Aesthetics + Geometrics\n\nggplot(economics, aes(x='date', y='uempmed')) + geom_point(size=0.3)\n\n\n<ggplot: (387793896)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#data-aesthetics-geometrics-3",
    "href": "posts/quarto/1_intro.html#data-aesthetics-geometrics-3",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Data + Aesthetics + Geometrics",
    "text": "Data + Aesthetics + Geometrics\n\nggplot(economics, aes(x='date', y='uempmed')) + geom_line()\n\n\n<ggplot: (-9223372036467376980)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#data-aesthetics-geometrics-4",
    "href": "posts/quarto/1_intro.html#data-aesthetics-geometrics-4",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Data + Aesthetics + Geometrics",
    "text": "Data + Aesthetics + Geometrics\n\nggplot(economics, aes(x='date', y='uempmed')) + geom_line() + geom_point(size=0.3)\n\n\n<ggplot: (-9223372036466972209)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#data-aesthetics-geometrics-5",
    "href": "posts/quarto/1_intro.html#data-aesthetics-geometrics-5",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Data + Aesthetics + Geometrics",
    "text": "Data + Aesthetics + Geometrics\n\nggplot(economics, aes(x='date', y='uempmed')) + geom_line() + geom_point(size=0.3, colour=\"blue\")\n\n\n<ggplot: (389146365)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#dataset-economics-1",
    "href": "posts/quarto/1_intro.html#dataset-economics-1",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Dataset: economics",
    "text": "Dataset: economics\n\neconomics.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 574 entries, 0 to 573\nData columns (total 8 columns):\n #   Column    Non-Null Count  Dtype         \n---  ------    --------------  -----         \n 0   date      574 non-null    datetime64[ns]\n 1   pce       574 non-null    float64       \n 2   pop       574 non-null    int64         \n 3   psavert   574 non-null    float64       \n 4   uempmed   574 non-null    float64       \n 5   unemploy  574 non-null    int64         \n 6   year      574 non-null    int64         \n 7   month     574 non-null    int64         \ndtypes: datetime64[ns](1), float64(3), int64(4)\nmemory usage: 36.0 KB"
  },
  {
    "objectID": "posts/quarto/1_intro.html#facets",
    "href": "posts/quarto/1_intro.html#facets",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Facets",
    "text": "Facets"
  },
  {
    "objectID": "posts/quarto/1_intro.html#data-aesthetics-geometrics-facets",
    "href": "posts/quarto/1_intro.html#data-aesthetics-geometrics-facets",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Data + Aesthetics + Geometrics + Facets",
    "text": "Data + Aesthetics + Geometrics + Facets\n\nggplot(economics, aes(x='date', y='uempmed')) + geom_line() +  facet_wrap('year', scales = 'free')\n\n\n<ggplot: (-9223372036465516014)>"
  },
  {
    "objectID": "posts/quarto/1_intro.html#dataset-economics-2",
    "href": "posts/quarto/1_intro.html#dataset-economics-2",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Dataset: economics",
    "text": "Dataset: economics\n\neconomics['year'] = economics['date'].dt.year\neconomics['month'] = economics['date'].dt.month"
  },
  {
    "objectID": "posts/quarto/1_intro.html#dataset-economics-3",
    "href": "posts/quarto/1_intro.html#dataset-economics-3",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Dataset: economics",
    "text": "Dataset: economics\n\neconomics.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 574 entries, 0 to 573\nData columns (total 8 columns):\n #   Column    Non-Null Count  Dtype         \n---  ------    --------------  -----         \n 0   date      574 non-null    datetime64[ns]\n 1   pce       574 non-null    float64       \n 2   pop       574 non-null    int64         \n 3   psavert   574 non-null    float64       \n 4   uempmed   574 non-null    float64       \n 5   unemploy  574 non-null    int64         \n 6   year      574 non-null    int64         \n 7   month     574 non-null    int64         \ndtypes: datetime64[ns](1), float64(3), int64(4)\nmemory usage: 36.0 KB"
  },
  {
    "objectID": "posts/quarto/1_intro.html#dataset-economics-4",
    "href": "posts/quarto/1_intro.html#dataset-economics-4",
    "title": "Data Visualization: Grammar of Graphics",
    "section": "Dataset: economics",
    "text": "Dataset: economics\n\neconomics.head(3)\n\n\n\n\n\n  \n    \n      \n      date\n      pce\n      pop\n      psavert\n      uempmed\n      unemploy\n      year\n      month\n    \n  \n  \n    \n      0\n      1967-07-01\n      507.4\n      198712\n      12.5\n      4.5\n      2944\n      1967\n      7\n    \n    \n      1\n      1967-08-01\n      510.5\n      198911\n      12.5\n      4.7\n      2945\n      1967\n      8\n    \n    \n      2\n      1967-09-01\n      516.3\n      199113\n      11.7\n      4.6\n      2958\n      1967\n      9"
  }
]