---
title: "Data Visualization: Grammar of Graphics"
format:
  revealjs:
    incremental: true   
jupyter: python3
---

## Grammar

::: {layout-ncol=2}

### English

- Nouns
- Article
- Adjective
- Verb
- Adverb
- Proposition

### Graphics

<img src="ggplotaes/scales.PNG" alt="knitrhex" height="500"/>

:::



## Grammar - Example

:::: {.columns}

::: {.column width="50%"}

**English**

The little monkey hangs confidently by a branch.




:::


::: {.column width="50%"}

**Graphics**

```{python}
import pandas as pd
import numpy as np

from plotnine import *
from plotnine.data import *

%matplotlib inline
(
    ggplot(economics, aes(x='date', y='uempmed')) 
    + geom_line() # line plot
    + labs(x='date', y='median duration of unemployment, in week')
)

```

:::

::::



## Grammar - Example

:::: {.columns}

::: {.column width="50%"}

**English**

 Article: The

 Adjective: little

 Noun: monkey

 Verb: hangs

 Adverb: Confidently

 Proposition: by

 Noun: a branch


:::


::: {.column width="50%"}

**Graphics**

<img src="ggplotaes/d1.PNG" alt="knitrhex" height="500"/>

:::

::::








## Graphics - Grammar components 

::: {.panel-tabset}

### Plot


```{python}
#| fig-width: 12
#| fig-height: 8
#| results: asis
import pandas as pd
import numpy as np

from plotnine import *
from plotnine.data import *

%matplotlib inline
(
    ggplot(economics, aes(x='date', y='uempmed')) 
    + geom_line() 
)

```

### Code


```python

import pandas as pd
import numpy as np

from plotnine import *
from plotnine.data import *

%matplotlib inline
(
    ggplot(economics, aes(x='date', y='uempmed')) 
    + geom_line() 
)

```

:::



## `geom_line`

::: {.panel-tabset}

### Plot


```{python}
import pandas as pd
import numpy as np

from plotnine import *
from plotnine.data import *

%matplotlib inline
(
    ggplot(economics, aes(x='date', y='uempmed')) 
    + geom_line() # line plot
    + labs(x='date', y='median duration of unemployment, in week')
)

```

### Code


```python

import pandas as pd
import numpy as np

from plotnine import *
from plotnine.data import *

%matplotlib inline
(
    ggplot(economics, aes(x='date', y='uempmed')) 
    + geom_line() 
)

```

:::

## `geom_point`

::: {.panel-tabset}

### Plot


```{python}
import pandas as pd
import numpy as np

from plotnine import *
from plotnine.data import *

%matplotlib inline
(
    ggplot(economics, aes(x='date', y='uempmed')) 
    + geom_point() 

)

```

### Code


```python

import pandas as pd
import numpy as np

from plotnine import *
from plotnine.data import *

%matplotlib inline
(
    ggplot(economics, aes(x='date', y='uempmed')) 
    + geom_point() # line plot
    + labs(x='date', y='median duration of unemployment, in week')
)

```

:::

# Making your first plot with `plotnine`

## Data

Date: data to be plotted

![](ggplotaes/data.PNG)

## Packages

```{python}
#| echo: true
import pandas as pd
import plotnine

from plotnine import *
from plotnine.data import *

```

## Dataset: `economics`

```{python}
#| echo: true
economics.head(3)
```

## Dataset: `economics`

```{python}
#| echo: true
economics.info()
```

## Dataset: `economics`

```{python}
#| echo: true
economics['year'] = economics['date'].dt.year
economics['month'] = economics['date'].dt.month
```

## Dataset: `economics`

```{python}
#| echo: true
economics.info()
```

## Dataset: `economics`

```{python}
#| echo: true
economics.head(3)
```

## Tidy data


![](ggplotaes/tidy.png)

- Every column is a variable.

- Every row is an observation.

- Every cell is a single value.

## Tidy data - Example

![](tidyr/tidyr1.png)

## Tidy data - Example

![](tidyr/tidyr2.png)

## Tidy data - Example

![](tidyr/tidyr3.png)


## Tidy data - Example

![](tidyr/longer_wider.png)

## Data

```{python}
#| echo: true
ggplot(data=economics)
```

## Aesthetics: mapping variables

![](ggplotaes/aes.PNG)

## Aesthetics: mapping variables

Aesthetic means “something you can see”. 

- position (i.e., on the x and y axes) 

- color (“outside” color) 

- fill (“inside” color)

- shape (of points)

## Aesthetic: position

```{python}
#| echo: true
from plotnine.data import mtcars

ggplot(mtcars, aes('wt', 'mpg')) + geom_point()
```

## Aesthetic: color

```{python}
#| echo: true
ggplot(mtcars, aes('wt', 'mpg', color='factor(cyl)')) + geom_point()
```

## Aesthetic: shape

```{python}
#| echo: true
ggplot(mtcars, aes('wt', 'mpg', shape='factor(cyl)')) + geom_point()
```

## Aesthetic: size

```{python}
#| echo: true
ggplot(mtcars, aes('wt', 'mpg', size='factor(cyl)')) + geom_point()
```

## Data + Aesthetics

```{python}
#| echo: true
ggplot(economics, aes(x='date', y='uempmed'))
```

## Geometrics

Actual marks we put on a plot

![](ggplotaes/geom.PNG)

## Data + Aesthetics + Geometrics

```{python}
#| echo: true
ggplot(economics, aes(x='date', y='uempmed')) + geom_point()
```

## Data + Aesthetics + Geometrics

```{python}
#| echo: true
ggplot(economics, aes(x='date', y='uempmed')) + geom_point(alpha=0.5)
```


## Data + Aesthetics + Geometrics

```{python}
#| echo: true
ggplot(economics, aes(x='date', y='uempmed')) + geom_point(size=0.3)
```

## Data + Aesthetics + Geometrics

```{python}
#| echo: true
ggplot(economics, aes(x='date', y='uempmed')) + geom_line()
```

## Data + Aesthetics + Geometrics

```{python}
#| echo: true
ggplot(economics, aes(x='date', y='uempmed')) + geom_line() + geom_point(size=0.3)
```

## Data + Aesthetics + Geometrics

```{python}
#| echo: true
ggplot(economics, aes(x='date', y='uempmed')) + geom_line() + geom_point(size=0.3, colour="blue")
```

